<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:CustomWindow.Themes"
                    x:Class="CustomWindow.Themes.CustomWindow">


    <!--#region Colors-->

    <SolidColorBrush x:Key="ColorfulColor" Color="#FF00acf3" />

    <SolidColorBrush x:Key="ButtonCloseHoverColor" Color="#FFDD6566" />
    <SolidColorBrush x:Key="ButtonClosePressedColor" Color="#FFFF8A8A" />

    <SolidColorBrush x:Key="ActiveWindowBorderBrush" Color="{Binding Color, Source={StaticResource ColorfulColor}}" />
    <SolidColorBrush x:Key="InactiveWindowBorderBrush" Color="#838484" />

    <!--#endregion-->

    <!--#region Button styles-->

    <Style x:Key="WindowHeaderButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Focusable" Value="false" />
        <Setter Property="Width" Value="50" />
        <Setter Property="Height" Value="32" />
        <Setter Property="Background" Value="{StaticResource FirstMainColor}" />
        <Setter Property="Foreground" Value="{StaticResource TextColor}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Border x:Name="PART_border" Background="{TemplateBinding Background}" />
                        <ContentPresenter />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource ColorfulColor}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="{DynamicResource ColorfulColor}" />
                            <Setter Property="Opacity" Value="0.7"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CloseWindowHeaderButtonStyle"
        BasedOn="{StaticResource WindowHeaderButtonStyle}"
        TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Border x:Name="PART_border" Background="{TemplateBinding Background}" />
                        <ContentPresenter />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource ButtonCloseHoverColor}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="{DynamicResource ButtonClosePressedColor}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="FocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle
                        Margin="2"
                        SnapsToDevicePixels="true"
                        Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                        StrokeDashArray="1 2"
                        StrokeThickness="1" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--#endregion-->

    <!--#region Window template-->

    <Style x:Key="DarkWindowStyle" TargetType="{x:Type Window}">
        <Style.Resources>
            <Style TargetType="{x:Type StatusBar}">
                <Setter Property="Foreground" Value="DarkBlue" />
                <Setter Property="Background" Value="DarkBlue" />
                <Style.Triggers>
                    <DataTrigger Binding="{Binding IsActive, RelativeSource={RelativeSource AncestorType={x:Type Window}}}" Value="False">
                        <Setter Property="Foreground" Value="DarkBlue" />
                        <Setter Property="Background" Value="DarkBlue" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>
            <Style TargetType="{x:Type ResizeGrip}">
                <Setter Property="WindowChrome.ResizeGripDirection" Value="BottomRight" />
            </Style>

        </Style.Resources>
        <Setter Property="WindowStyle" Value="None" />
        <Setter Property="AllowsTransparency" Value="False" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="TextOptions.TextFormattingMode" Value="Display" />
        <Setter Property="TextOptions.TextRenderingMode" Value="Auto" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="ResizeMode" Value="CanResize" />
        <Setter Property="WindowChrome.WindowChrome">
            <Setter.Value>
                <WindowChrome
                    CaptionHeight="30"
                    CornerRadius="0"
                    GlassFrameThickness="0"
                    NonClientFrameEdges="None"
                    ResizeBorderThickness="7" />
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Window}">
                    <Border x:Name="PART_Container">
                        <Grid>
                            <Border
                                x:Name="PART_Border"
                                Background="{DynamicResource FirstMainColor}"
                                BorderBrush="{DynamicResource ActiveWindowBorderBrush}"
                                BorderThickness="1" />
                            <Grid
                                Margin="1"
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Stretch"
                                Background="Transparent">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="33" />
                                    <RowDefinition Height="*" />
                                </Grid.RowDefinitions>
                                <Border
                                    x:Name="TitleBar"
                                    VerticalAlignment="Stretch"
                                    BorderBrush="{DynamicResource ActiveWindowBorderBrush}"
                                    BorderThickness="0,0,0,1">
                                    <Grid
                                        Width="Auto"
                                        Height="32"
                                        HorizontalAlignment="Stretch">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*" />
                                            <ColumnDefinition Width="155" />
                                        </Grid.ColumnDefinitions>
                                        <ContentControl
                                            HorizontalAlignment="Stretch"
                                            VerticalAlignment="Stretch"
                                            Panel.ZIndex="1"
                                            WindowChrome.IsHitTestVisibleInChrome="True">
                                            <StackPanel HorizontalAlignment="Left" Orientation="Horizontal">
                                                <Button
                                                    x:Name="ApplicationButton"
                                                    Width="Auto"
                                                    Style="{DynamicResource WindowHeaderButtonStyle}">
                                                    <StackPanel Margin="5,2" Orientation="Horizontal">
                                                        <Image Width="26" Source="../Resources/AppIcon.png" >
                                                            <Image.Effect>
                                                                <DropShadowEffect BlurRadius="2" ShadowDepth="1" Opacity="0.7"/>
                                                            </Image.Effect>
                                                        </Image>
                                                        <TextBlock
                                                            Margin="5,0,0,0"
                                                            VerticalAlignment="Center"
                                                            Foreground="{StaticResource TextColor}"
                                                            Text="Windows App" />
                                                    </StackPanel>
                                                </Button>
                                                <Menu
                                                    Height="32"
                                                    VerticalAlignment="Top"
                                                    Background="{x:Null}">
                                                    <MenuItem
                                                        Width="60"
                                                        Header="Themes"
                                                        TabIndex="0"
                                                        Style="{DynamicResource MenuItemStyle}">
                                                        <MenuItem Header="Dark Theme" Template="{DynamicResource ContextMenuItemControlTemplate}" />
                                                        <MenuItem Header="Light Theme" Template="{DynamicResource ContextMenuItemControlTemplate}" />
                                                    </MenuItem>
                                                    <MenuItem Header="About" Style="{DynamicResource MenuItemStyle}" Width="50"/>
                                                </Menu>
                                            </StackPanel>
                                        </ContentControl>
                                        <StackPanel
                                            Grid.Column="1"
                                            HorizontalAlignment="Right"
                                            Orientation="Horizontal">
                                            <Button
                                                x:Name="MinimizeButton"
                                                Click="MinimizeButton_OnClick"
                                                CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}, Mode=FindAncestor}}"
                                                Style="{StaticResource WindowHeaderButtonStyle}"
                                                WindowChrome.IsHitTestVisibleInChrome="True">
                                                <Grid MaxWidth="9" MaxHeight="9">
                                                    <Path
                                                        Data="M0,8 H8 M0,7 H8 M0,6 H8"
                                                        RenderOptions.EdgeMode="Aliased"
                                                        Stretch="None"
                                                        Stroke="{Binding Foreground, RelativeSource={RelativeSource AncestorType={x:Type Button}}}"
                                                        StrokeThickness="1" />
                                                </Grid>
                                            </Button>
                                            <Button
                                                x:Name="MaximizeButton"
                                                Click="MaximizeButton_OnClick"
                                                CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}, Mode=FindAncestor}}"
                                                Style="{DynamicResource WindowHeaderButtonStyle}"
                                                WindowChrome.IsHitTestVisibleInChrome="True">

                                                <Grid MaxWidth="9" MaxHeight="9">
                                                    <Path
                                                        x:Name="PART_MaxButton_Path"
                                                        Data="M0,0 H8 V8 H0 V0 M0,1 H8 M0,2 H8"
                                                        RenderOptions.EdgeMode="Aliased"
                                                        Stretch="None"
                                                        Stroke="{Binding Foreground, RelativeSource={RelativeSource AncestorType={x:Type Button}}}"
                                                        StrokeThickness="1" />
                                                </Grid>
                                            </Button>
                                            <Button
                                                x:Name="CloseButton"
                                                Click="CloseButton_OnClick"
                                                CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}, Mode=FindAncestor}}"
                                                Style="{DynamicResource CloseWindowHeaderButtonStyle}"
                                                WindowChrome.IsHitTestVisibleInChrome="True">
                                                <Grid MaxWidth="9" MaxHeight="9">
                                                    <Path
                                                        Data="M0,0 L8,8 M0,8 L8,0"
                                                        Stretch="None"
                                                        Stroke="{Binding Foreground, RelativeSource={RelativeSource AncestorType={x:Type Button}}}"
                                                        StrokeThickness="1.5" />
                                                </Grid>
                                            </Button>
                                        </StackPanel>
                                    </Grid>
                                </Border>
                                <ContentPresenter x:Name="contentPresenter" Grid.Row="1" />
                            </Grid>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="WindowState" Value="Maximized">
                            <Setter TargetName="PART_MaxButton_Path" Property="Data" Value="M0,3 H5 V8 H0 V3 M0,4 H5 M3,0 H8 V5 H7 M3,1 H8" />
                            <Setter TargetName="PART_Container" Property="Padding" Value="5" />
                            <Setter TargetName="PART_Border" Property="BorderThickness" Value="0" />
                        </Trigger>
                        <!--<Trigger Property="WindowState" Value="Normal">
                            <Setter TargetName="PART_Border" Property="Effect">
                                <Setter.Value>
                                    <DropShadowEffect
                                        BlurRadius="7"
                                        Direction="30"
                                        Opacity="0.5"
                                        ShadowDepth="1"
                                        Color="Black" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>-->
                        <Trigger Property="IsActive" Value="False">
                            <Setter TargetName="PART_Border" Property="BorderBrush" Value="{DynamicResource InactiveWindowBorderBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <EventSetter Event="Loaded" Handler="WindowLoaded" />
    </Style>

    <Style x:Key="CommonWindowsStyle" TargetType="{x:Type Window}">
        <Style.Resources>
            <Style TargetType="{x:Type StatusBar}">
                <Setter Property="SnapsToDevicePixels" Value="True" />
                <Setter Property="TextOptions.TextFormattingMode" Value="Display" />
                <Setter Property="TextOptions.TextRenderingMode" Value="Auto" />
                <Setter Property="UseLayoutRounding" Value="True" />
            </Style>
            <Style TargetType="{x:Type ResizeGrip}">
                <Setter Property="WindowChrome.ResizeGripDirection" Value="BottomRight" />
            </Style>
        </Style.Resources>
        <Setter Property="WindowChrome.WindowChrome">
            <Setter.Value>
                <WindowChrome CaptionHeight="0" />
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Window}">
                    <Border x:Name="PART_Container" Padding="0">
                        <Grid>
                            <Border
                                x:Name="PART_Border"
                                Width="Auto"
                                Height="Auto"
                                VerticalAlignment="Stretch"
                                Panel.ZIndex="1"
                                BorderBrush="{DynamicResource ColorfulColor}"
                                BorderThickness="1" />
                            <Grid
                                Width="Auto"
                                Height="Auto"
                                Margin="0"
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Stretch"
                                Background="Transparent">
                                <AdornerDecorator>
                                    <ContentPresenter
                                        x:Name="contentPresenter"
                                        Width="Auto"
                                        Height="Auto"
                                        HorizontalAlignment="Stretch"
                                        VerticalAlignment="Stretch" />
                                </AdornerDecorator>
                            </Grid>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="WindowState" Value="Maximized">
                            <Setter TargetName="PART_Container" Property="Padding" Value="5" />
                            <Setter TargetName="PART_Border" Property="BorderThickness" Value="0" />
                        </Trigger>
                        <Trigger Property="IsActive" Value="False">
                            <Setter TargetName="PART_Border" Property="BorderBrush" Value="{DynamicResource InactiveWindowBorderBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.BasedOn>
            <StaticResource ResourceKey="DarkWindowStyle" />
        </Style.BasedOn>
    </Style>

    <Style x:Key="TransparentWindowHeaderButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Focusable" Value="false" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid
                        HorizontalAlignment="Stretch"
                        VerticalAlignment="Stretch"
                        Background="{TemplateBinding Background}">
                        <ContentPresenter Name="ContentPresenter" Opacity="0.7" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="ContentPresenter" Property="Opacity" Value="1" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style
        x:Key="CloseWindowButtonStyle"
        BasedOn="{StaticResource TransparentWindowHeaderButtonStyle}"
        TargetType="{x:Type Button}">
        <Setter Property="Width" Value="11" />
        <Setter Property="Height" Value="11" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid
                        HorizontalAlignment="Stretch"
                        VerticalAlignment="Stretch"
                        Background="{TemplateBinding Background}">
                        <Path
                            x:Name="CloseIcon"
                            Fill="#FFFFFFFF"
                            Stroke="{x:Null}">
                            <Path.Data>
                                <PathGeometry Figures="M10.46,1.11L6.08,5.5 10.46,9.89 9.89,10.46 5.5,6.08 1.11,10.46 0.54,9.89 4.92,5.5 0.54,1.11 1.11,0.54 5.5,4.92 9.89,0.54z" />
                            </Path.Data>
                        </Path>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="CloseIcon" Property="Opacity" Value="1" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!--#endregion-->


    <SolidColorBrush x:Key="MenuPopupSeparatorsStyle.Static.Fill" Color="#FF4A4A4A" />

    <ControlTemplate x:Key="ContextMenuItemControlTemplate" TargetType="{x:Type MenuItem}">
        <Border
            x:Name="templateRoot"
            Background="{TemplateBinding Background}"
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="{TemplateBinding BorderThickness}"
            SnapsToDevicePixels="True">
            <Grid Margin="-1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition
                        Width="Auto"
                        MinWidth="20"
                        SharedSizeGroup="MenuItemIconColumnGroup" />
                    <ColumnDefinition Width="0" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="38" />
                    <ColumnDefinition Width="Auto" SharedSizeGroup="MenuItemIGTColumnGroup" />
                    <ColumnDefinition Width="20" />
                </Grid.ColumnDefinitions>
                <ContentPresenter
                    x:Name="Icon"
                    Width="16"
                    Height="16"
                    Margin="3"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Content="{TemplateBinding Icon}"
                    ContentSource="Icon"
                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                <Border
                    x:Name="GlyphPanel"
                    Width="22"
                    Height="22"
                    Margin="-1,0,0,0"
                    VerticalAlignment="Center"
                    Background="#3D26A0DA"
                    BorderBrush="#FF26A0DA"
                    BorderThickness="1"
                    Visibility="Hidden">
                    <Path
                        x:Name="Glyph"
                        Width="9"
                        Height="11"
                        Data="F1M10,1.2L4.7,9.1 4.5,9.1 0,5.2 1.3,3.5 4.3,6.1 8.3,0 10,1.2z"
                        Fill="#FF212121"
                        FlowDirection="LeftToRight" />
                </Border>
                <ContentPresenter
                    Grid.Column="2"
                    Margin="{TemplateBinding Padding}"
                    HorizontalAlignment="Left"
                    VerticalAlignment="Center"
                    Content="{TemplateBinding Header}"
                    ContentSource="Header"
                    ContentStringFormat="{TemplateBinding HeaderStringFormat}"
                    ContentTemplate="{TemplateBinding HeaderTemplate}"
                    RecognizesAccessKey="True"
                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                <TextBlock
                    Grid.Column="4"
                    Margin="{TemplateBinding Padding}"
                    HorizontalAlignment="Right"
                    VerticalAlignment="Center"
                    Opacity="0.7"
                    Text="{TemplateBinding InputGestureText}" />
                <Path
                    x:Name="RightArrow"
                    Grid.Column="5"
                    Margin="10,0,0,0"
                    HorizontalAlignment="Left"
                    VerticalAlignment="Center"
                    Data="M0,0L4,3.5 0,7z"
                    Fill="White" />
                <Popup
                    x:Name="PART_Popup"
                    AllowsTransparency="True"
                    Focusable="False"
                    HorizontalOffset="-2"
                    IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}"
                    Placement="Right"
                    PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}"
                    VerticalOffset="-3">
                    <Border
                        x:Name="SubMenuBorder"
                        Padding="2"
                        Background="{DynamicResource SecondMainColor}"
                        BorderBrush="{DynamicResource MenuPopupSeparatorsStyle.Static.Fill}"
                        BorderThickness="1">
                        <ScrollViewer
                            x:Name="SubMenuScrollViewer"
                            Foreground="{DynamicResource TextColor}"
                            Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer,
                                                                          TypeInTargetAssembly={x:Type FrameworkElement}}}">
                            <Grid RenderOptions.ClearTypeHint="Enabled">
                                <Canvas
                                    Width="0"
                                    Height="0"
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Top">
                                    <Rectangle
                                        x:Name="OpaqueRect"
                                        Width="{Binding ActualWidth, ElementName=SubMenuBorder}"
                                        Height="{Binding ActualHeight, ElementName=SubMenuBorder}"
                                        Fill="{Binding Background, ElementName=SubMenuBorder}" />
                                </Canvas>
                                <ItemsPresenter
                                    x:Name="ItemsPresenter"
                                    Grid.IsSharedSizeScope="True"
                                    KeyboardNavigation.DirectionalNavigation="Cycle"
                                    KeyboardNavigation.TabNavigation="Cycle"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </Grid>
                        </ScrollViewer>
                    </Border>
                </Popup>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsSuspendingPopupAnimation" Value="True">
                <Setter TargetName="PART_Popup" Property="PopupAnimation" Value="None" />
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
                <Setter TargetName="GlyphPanel" Property="Visibility" Value="Visible" />
                <Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
            </Trigger>
            <Trigger Property="HasItems" Value="False">
                <Setter TargetName="RightArrow" Property="Visibility" Value="Collapsed" />
            </Trigger>
            <Trigger Property="IsHighlighted" Value="True">
                <Setter TargetName="templateRoot" Property="Background" Value="Transparent" />
                <Setter TargetName="templateRoot" Property="BorderBrush" Value="#FF26A0DA" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="templateRoot" Property="BorderBrush" Value="{DynamicResource ColorfulColor}" />
                <Setter TargetName="templateRoot" Property="Background" Value="{DynamicResource ColorfulColor}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="templateRoot" Property="TextElement.Foreground" Value="#FF707070" />
                <Setter TargetName="Glyph" Property="Fill" Value="#FF707070" />
                <Setter TargetName="RightArrow" Property="Fill" Value="#FF707070" />
            </Trigger>
            <Trigger SourceName="SubMenuScrollViewer" Property="CanContentScroll" Value="False">
                <Setter TargetName="OpaqueRect" Property="Canvas.Top" Value="{Binding VerticalOffset, ElementName=SubMenuScrollViewer}" />
                <Setter TargetName="OpaqueRect" Property="Canvas.Left" Value="{Binding HorizontalOffset, ElementName=SubMenuScrollViewer}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="MenuItemStyle" TargetType="{x:Type MenuItem}">
        <Setter Property="Foreground" Value="{StaticResource TextColor}" />
        <Setter Property="Height" Value="32" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type MenuItem}">
                    <Border
                        x:Name="templateRoot"
                        Background="{TemplateBinding Background}"
                        SnapsToDevicePixels="True">
                        <Grid Height="{TemplateBinding ActualHeight}" VerticalAlignment="Center">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <Path
                                x:Name="GlyphPanel"
                                Margin="3"
                                VerticalAlignment="Center"
                                Data="F1M10,1.2L4.7,9.1 4.5,9.1 0,5.2 1.3,3.5 4.3,6.1 8.3,0 10,1.2z"
                                Fill="{TemplateBinding Foreground}"
                                FlowDirection="LeftToRight"
                                Visibility="Collapsed" />
                            <ContentPresenter
                                Grid.Column="1"
                                Margin="{TemplateBinding Padding}"
                                VerticalAlignment="Center"
                                Content="{TemplateBinding Header}"
                                ContentSource="Header"
                                ContentStringFormat="{TemplateBinding HeaderStringFormat}"
                                ContentTemplate="{TemplateBinding HeaderTemplate}"
                                RecognizesAccessKey="True"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            <Popup
                                x:Name="PART_Popup"
                                AllowsTransparency="True"
                                Focusable="False"
                                IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}"
                                Placement="Bottom"
                                PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}">
                                <Border
                                    x:Name="SubMenuBorder"
                                    Padding="0"
                                    Background="{DynamicResource SecondMainColor}"
                                    BorderBrush="{StaticResource MenuPopupSeparatorsStyle.Static.Fill}"
                                    BorderThickness="1">
                                    <ScrollViewer x:Name="SubMenuScrollViewer" Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}">
                                        <Grid RenderOptions.ClearTypeHint="Enabled">
                                            <Canvas
                                                Width="0"
                                                Height="0"
                                                HorizontalAlignment="Left"
                                                VerticalAlignment="Top">
                                                <Rectangle
                                                    x:Name="OpaqueRect"
                                                    Width="{Binding ActualWidth, ElementName=SubMenuBorder}"
                                                    Height="{Binding ActualHeight, ElementName=SubMenuBorder}"
                                                    Fill="{Binding Background, ElementName=SubMenuBorder}" />
                                            </Canvas>
                                            <ItemsPresenter
                                                x:Name="ItemsPresenter"
                                                Grid.IsSharedSizeScope="True"
                                                KeyboardNavigation.DirectionalNavigation="Cycle"
                                                KeyboardNavigation.TabNavigation="Cycle"
                                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                        </Grid>
                                    </ScrollViewer>
                                </Border>
                            </Popup>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSuspendingPopupAnimation" Value="True">
                            <Setter TargetName="PART_Popup" Property="PopupAnimation" Value="None" />
                        </Trigger>
                        <Trigger Property="IsHighlighted" Value="True">
                            <Setter TargetName="templateRoot" Property="Background" Value="{StaticResource ThirdMainColor}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="templateRoot" Property="TextElement.Foreground" Value="#FF707070" />
                            <Setter TargetName="GlyphPanel" Property="Fill" Value="#FF707070" />
                            <Setter Property="Opacity" Value="0.5" />
                        </Trigger>
                        <Trigger SourceName="SubMenuScrollViewer" Property="CanContentScroll" Value="False">
                            <Setter TargetName="OpaqueRect" Property="Canvas.Top" Value="{Binding VerticalOffset, ElementName=SubMenuScrollViewer}" />
                            <Setter TargetName="OpaqueRect" Property="Canvas.Left" Value="{Binding HorizontalOffset, ElementName=SubMenuScrollViewer}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>